#!/bin/bash

default_pw="123"

function fix_users_or_authors() {
	key=$1

	for username in $(ls -1p /home/users/ | sed -n 's/^\(.*\)\/$/\1/p'); do
		exists=$(yq ".$key[] | select(.username == \"$username\")"  "/scripts/users.yaml")

		if [[ -z "$exists" ]]; then
			userdel "$username"
			echo "Removed $key $username"
		fi
	done
}


function populate() {
	key=$1
	u=0

	while true
	do
		user=$(yq ".$key[$u]" /scripts/users.yaml)
		if [[ $user == 'null' ]]; then return; fi

		username=$(echo "$user" | yq ".username")
		name=$(echo "$user" | yq ".name")

		homedir="/home/$key/$username"

		useradd -m -d "$homedir" -U -c "$name" "$username" 2>/dev/null

		if [[ $? != 0 ]]; then
			echo "skipping $key $username"
			continue
		fi

		echo -e "$default_pw\n$default_pw" | passwd -q "$username"

		if [[ $key == "users" ]] || [[ $key == "authors" ]]; then
			chmod o+x "$homedir"
		fi

		if [[ $? != 0 ]]; then
			echo "skipping $key $username"
		else
			usermod -a -G "g_$key" "$username"
			if [[ $key == "users" ]]; then
				mkdir "$homedir/all_blogs" "$homedir/subscribed_blogs"
				touch "$homedir/blog_reads.log"
				chown "$username:$username" "$homedir/all_blogs" "$homedir/subscribed_blogs" "$homedir/blog_reads.log"
			elif [[ $key == "authors" ]]; then
				groupadd "g_${username}_subs"

				dirs="$homedir/blogs $homedir/public $homedir/subscribers_only"
				mkdir $dirs
				cp "/scripts/blogs_initial.yaml" "$homedir/blogs.yaml"
				chown "$username:$username" $dirs "$homedir/blogs.yaml"
				chmod u=rwx,g=rwx,o=x $dirs
				chmod u=rwx,g=rwx,o= "$homedir/blogs.yaml"
				chmod o+r "$homedir/public"
				setfacl -R -d -m "g:g_${username}_subs:r" -m "g:g_${username}_subs:r" "$homedir/subscribers_only"
			fi
			echo "$key $username $name"
		fi

		((u=u+1))
	done
}

fix_users_or_authors users
fix_users_or_authors authors

populate admins
populate mods
populate authors
populate users
